// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// mean_vec
arma::vec mean_vec(arma::vec& x);
RcppExport SEXP _sapo_mean_vec(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(mean_vec(x));
    return rcpp_result_gen;
END_RCPP
}
// poly_rf2
S4 poly_rf2(const S4& objsp);
RcppExport SEXP _sapo_poly_rf2(SEXP objspSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const S4& >::type objsp(objspSEXP);
    rcpp_result_gen = Rcpp::wrap(poly_rf2(objsp));
    return rcpp_result_gen;
END_RCPP
}
// poly_shift
S4 poly_shift(S4& obj_sp, NumericMatrix& bbox_tot);
RcppExport SEXP _sapo_poly_shift(SEXP obj_spSEXP, SEXP bbox_totSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< S4& >::type obj_sp(obj_spSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type bbox_tot(bbox_totSEXP);
    rcpp_result_gen = Rcpp::wrap(poly_shift(obj_sp, bbox_tot));
    return rcpp_result_gen;
END_RCPP
}
// poly_shift_noid
S4 poly_shift_noid(S4& obj_sp, NumericMatrix& bbox_tot);
RcppExport SEXP _sapo_poly_shift_noid(SEXP obj_spSEXP, SEXP bbox_totSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< S4& >::type obj_sp(obj_spSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type bbox_tot(bbox_totSEXP);
    rcpp_result_gen = Rcpp::wrap(poly_shift_noid(obj_sp, bbox_tot));
    return rcpp_result_gen;
END_RCPP
}
// poly_touch
S4 poly_touch(S4& x, arma::mat& bbox);
RcppExport SEXP _sapo_poly_touch(SEXP xSEXP, SEXP bboxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< S4& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type bbox(bboxSEXP);
    rcpp_result_gen = Rcpp::wrap(poly_touch(x, bbox));
    return rcpp_result_gen;
END_RCPP
}
// shift_aux
S4 shift_aux(S4 obj_sp, S4 obj_sp2, S4 obj_sp3, S4 obj_sp4, int n_poly, double range_x, double range_y);
RcppExport SEXP _sapo_shift_aux(SEXP obj_spSEXP, SEXP obj_sp2SEXP, SEXP obj_sp3SEXP, SEXP obj_sp4SEXP, SEXP n_polySEXP, SEXP range_xSEXP, SEXP range_ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< S4 >::type obj_sp(obj_spSEXP);
    Rcpp::traits::input_parameter< S4 >::type obj_sp2(obj_sp2SEXP);
    Rcpp::traits::input_parameter< S4 >::type obj_sp3(obj_sp3SEXP);
    Rcpp::traits::input_parameter< S4 >::type obj_sp4(obj_sp4SEXP);
    Rcpp::traits::input_parameter< int >::type n_poly(n_polySEXP);
    Rcpp::traits::input_parameter< double >::type range_x(range_xSEXP);
    Rcpp::traits::input_parameter< double >::type range_y(range_ySEXP);
    rcpp_result_gen = Rcpp::wrap(shift_aux(obj_sp, obj_sp2, obj_sp3, obj_sp4, n_poly, range_x, range_y));
    return rcpp_result_gen;
END_RCPP
}
// torus_corr
S4 torus_corr(S4& objsp, Rcpp::NumericMatrix& bbox_tot);
RcppExport SEXP _sapo_torus_corr(SEXP objspSEXP, SEXP bbox_totSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< S4& >::type objsp(objspSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix& >::type bbox_tot(bbox_totSEXP);
    rcpp_result_gen = Rcpp::wrap(torus_corr(objsp, bbox_tot));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_sapo_mean_vec", (DL_FUNC) &_sapo_mean_vec, 1},
    {"_sapo_poly_rf2", (DL_FUNC) &_sapo_poly_rf2, 1},
    {"_sapo_poly_shift", (DL_FUNC) &_sapo_poly_shift, 2},
    {"_sapo_poly_shift_noid", (DL_FUNC) &_sapo_poly_shift_noid, 2},
    {"_sapo_poly_touch", (DL_FUNC) &_sapo_poly_touch, 2},
    {"_sapo_shift_aux", (DL_FUNC) &_sapo_shift_aux, 7},
    {"_sapo_torus_corr", (DL_FUNC) &_sapo_torus_corr, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_sapo(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
